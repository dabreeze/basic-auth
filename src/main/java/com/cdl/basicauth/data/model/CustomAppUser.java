package com.cdl.basicauth.data.model;import com.fasterxml.jackson.annotation.JsonIgnoreProperties;import lombok.AllArgsConstructor;import lombok.Data;import lombok.NoArgsConstructor;import org.springframework.security.core.GrantedAuthority;import org.springframework.security.core.authority.SimpleGrantedAuthority;import org.springframework.security.core.userdetails.UserDetails;import java.util.Collection;import java.util.Collections;@Data@AllArgsConstructor@NoArgsConstructorpublic class CustomAppUser implements UserDetails {    private AppUser appUser;    private Long id;    private String username;    private String token;    @JsonIgnoreProperties    private String password;    private String role;    @Override    public String toString() {        return "CustomAppUser{" +                "id=" + id +                ", userName='" + username + '\'' +                ", password='" + password + '\'' +                ", role='" + role + '\'' +                '}';    }    @Override    public Collection<? extends GrantedAuthority> getAuthorities() {        return Collections.singleton(new SimpleGrantedAuthority("USER"));    }    @Override    public String getUsername() {        return username;    }    @Override    public boolean isAccountNonExpired() {        return false;    }    @Override    public boolean isAccountNonLocked() {        return true;    }    @Override    public boolean isCredentialsNonExpired() {        return true;    }    @Override    public boolean isEnabled() {        return true;    }}