package com.cdl.basicauth.data.model;import com.fasterxml.jackson.annotation.JsonIgnore;import org.springframework.security.core.GrantedAuthority;import org.springframework.security.core.authority.SimpleGrantedAuthority;import org.springframework.security.core.userdetails.UserDetails;import javax.persistence.*;import java.util.Collection;import java.util.Collections;@Entity@Table(name = "user")public class AppUser implements UserDetails {    @Id    @GeneratedValue(strategy = GenerationType.AUTO)    private Long id;    private String username;    @JsonIgnore    private String password;    private String role;    public AppUser() {    }    public String getUsername() {        return username;    }    @Override    public boolean isAccountNonExpired() {        return true;    }    @Override    public boolean isAccountNonLocked() {        return true;    }    @Override    public boolean isCredentialsNonExpired() {        return true;    }    @Override    public boolean isEnabled() {        return true;    }    public void setUsername(String username) {        this.username = username;    }    @Override    public Collection<? extends GrantedAuthority> getAuthorities() {        return Collections.singleton(new SimpleGrantedAuthority("USER"));    }    public String getPassword() {        return password;    }    public void setPassword(String password) {        this.password = password;    }    public String getRole() {        return role;    }    public void setRole(String role) {        this.role = role;    }    public AppUser(String username, String password, String role) {        this.username = username;        this.password = password;        this.role = role;    }}