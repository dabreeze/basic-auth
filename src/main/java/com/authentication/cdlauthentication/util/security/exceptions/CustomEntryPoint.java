package com.authentication.cdlauthentication.util.security.exceptions;import com.fasterxml.jackson.databind.ObjectMapper;import io.jsonwebtoken.MalformedJwtException;import org.springframework.http.HttpStatus;import org.springframework.http.MediaType;import org.springframework.security.core.AuthenticationException;import org.springframework.security.web.AuthenticationEntryPoint;import org.springframework.stereotype.Component;import javax.servlet.ServletException;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;import java.io.OutputStream;import java.util.Date;import java.util.HashMap;import java.util.Map;@Component("customEntryPoint")public class CustomEntryPoint implements AuthenticationEntryPoint {    @Override    public void commence(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException) throws IOException,            MalformedJwtException, ServletException {        response.setContentType(MediaType.APPLICATION_JSON_VALUE);        response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);        Map<String,String>error = new HashMap<>();        error.put("responseCode", String.valueOf(HttpServletResponse.SC_NOT_FOUND));        error.put("message", authException.getMessage());        error.put("date", String.valueOf(new Date()));        error.put("response", String.valueOf(404));        OutputStream responseStream = response.getOutputStream();        ObjectMapper mapper = new ObjectMapper();        mapper.writeValue(responseStream, error);        responseStream.flush();    }}