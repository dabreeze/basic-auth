package com.authentication.loan_mandate.domain.model;import lombok.*;import javax.persistence.*;import java.math.BigDecimal;import java.time.LocalDateTime;@Entity@Getter @Setter@Builderpublic class LoanMandate {    @Id    @GeneratedValue(strategy = GenerationType.AUTO)    @Column(name = "id")    private Long id;    @Column(name = "client_id")    private String clientId;    @Column(name = "first_name")    private String firstName;    @Column(name = "last_name")    private String lastName;    @Column(name = "payer_email")    private String payerEmail;    @Column(name = "payer_phone")    private String payerPhone;    @Column(name = "payer_account")    private String payerAccount;    private Integer status;    @Column(name = "payer_bank_code")    private String payerBankCode;    @Column(name = "amount")    private BigDecimal amount;    @Column(name = "bvn")    private String bvn;    @Column(name = "transaction_id")    private String transactionId;    @Column(name = "transaction_type")    private String transactionType;//    @Column(name = "loan_id")//    private String loanId;    @Column(name = "batch_number")    private String batchNumber;    @Column(name = "start_date")    private String startDate;    @Column(name = "end_date")    private String endDate;    @Column(name = "frequency")    private String frequency;    @Column(name = "tenor")    private Integer tenor;    @Column(name = "mandateReference")    private String mandateReference;    private String message;//    @Column(name = "is_debited")//    private boolean isDebited;    @Column(name = "is_data_referencing")    private Boolean isDataReferencing;    @Column(name = "deduction_date")    private LocalDateTime deductionDate;    public LoanMandate() {    }    public LoanMandate(Long id, String clientId, String firstName, String lastName, String payerEmail, String payerPhone, String payerAccount, Integer status, String payerBankCode, BigDecimal amount, String bvn, String transactionId, String transactionType, String batchNumber, String startDate, String endDate, String frequency, Integer tenor, String mandateReference, String message, Boolean isDataReferencing, LocalDateTime deductionDate) {        this.id = id;        this.clientId = clientId;        this.firstName = firstName;        this.lastName = lastName;        this.payerEmail = payerEmail;        this.payerPhone = payerPhone;        this.payerAccount = payerAccount;        this.status = status;        this.payerBankCode = payerBankCode;        this.amount = amount;        this.bvn = bvn;        this.transactionId = transactionId;        this.transactionType = transactionType;        this.batchNumber = batchNumber;        this.startDate = startDate;        this.endDate = endDate;        this.frequency = frequency;        this.tenor = tenor;        this.mandateReference = mandateReference;        this.message = message;        this.isDataReferencing = isDataReferencing;        this.deductionDate = deductionDate;    }    @Override    public String toString() {        return "LoanMandate{" +                "id=" + id +                ", clientId=" + clientId +                ", firstName='" + firstName + '\'' +                ", lastName='" + lastName + '\'' +                ", payerEmail='" + payerEmail + '\'' +                ", payerPhone=" + payerPhone +                ", payerAccount=" + payerAccount +                ", payerBankCode=" + payerBankCode +                ", amount=" + amount +                ", bvn=" + bvn +                ", transactionId=" + transactionId +                ", transactionType='" + transactionType + '\'' +                ", batchNumber='" + batchNumber + '\'' +                ", startDate='" + startDate + '\'' +                ", endDate='" + endDate + '\'' +                ", frequency='" + frequency + '\'' +                ", tenor=" + tenor +                ", mandateReference='" + mandateReference + '\'' +                ", message='" + message + '\'' +                ", isDataReferencing=" + isDataReferencing +                ", deductionDate=" + deductionDate +                '}';    }}